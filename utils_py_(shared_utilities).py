# -*- coding: utf-8 -*-
"""utils.py (Shared Utilities)

Automatically generated by Colab.

Original file is located at
    https://colab.research.google.com/drive/1X3AKRFXsWq57cgLmYuGX0UF0Tf4-TCKR
"""

# -*- coding: utf-8 -*-
import streamlit as st
import os
import requests
import base64

# --- Environment variables and Configuration ---
BACKEND_URL = os.getenv("BACKEND_URL", "https://haven-fastapi-backend.onrender.com")

# --- Translation and Simplification Dictionaries from front_main.py ---
TRANSLATION_DICT = {
    'en': {
        'login': 'Login', 'register': 'Register', 'register_title': 'Register to HAVEN',
        'individual': 'Individual', 'organization': 'Organization', 'full_name': 'Full Name',
        'email_id': 'Email Address', 'phone_number': 'Phone Number', 'otp': 'OTP',
        'password': 'Password', 'confirm_password': 'Confirm Password', 'address': 'Address',
        'identity_verification': 'Identity Verification', 'document_type': 'Document Type',
        'upload_document': 'Upload Document', 'register_button': 'Register',
        'passwords_not_match': 'Passwords do not match!', 'org_name': 'Organization Name',
        'org_phone': 'Organization Phone', 'org_type': 'Organization Type',
        'org_description': 'Organization Description', 'contact_person': 'Contact Person',
        'contact_email': 'Contact Email', 'org_verification': 'Organization Verification',
        'cert_type': 'Certificate Type', 'upload_cert': 'Upload Certificate',
        'not_registered': "Already have an account?"
    },
    'hi': {
        'login': 'लॉग इन', 'register': 'रजिस्टर', 'register_title': 'हैवन से रजिस्टर करें',
        'individual': 'व्यक्तिगत', 'organization': 'संगठन', 'full_name': 'पूरा नाम',
        'email_id': 'ईमेल पता', 'phone_number': 'फ़ोन नंबर', 'otp': 'ओटीपी',
        'password': 'पासवर्ड', 'confirm_password': 'पासवर्ड की पुष्टि करें', 'address': 'पता',
        'identity_verification': 'पहचान सत्यापन', 'document_type': 'दस्तावेज़ का प्रकार',
        'upload_document': 'दस्तावेज़ अपलोड करें', 'register_button': 'रजिस्टर करें',
        'passwords_not_match': 'पासवर्ड मेल नहीं खाते हैं!', 'org_name': 'संगठन का नाम',
        'org_phone': 'संगठन का फ़ोन', 'org_type': 'संगठन का प्रकार',
        'org_description': 'संगठन का विवरण', 'contact_person': 'संपर्क व्यक्ति',
        'contact_email': 'संपर्क ईमेल', 'org_verification': 'संगठन सत्यापन',
        'cert_type': 'प्रमाणपत्र का प्रकार', 'upload_cert': 'प्रमाणपत्र अपलोड करें',
        'not_registered': "पहले से ही एक खाता है?"
    },
    'ta': {
        'login': 'உள்நுழைவு', 'register': 'பதிவு', 'register_title': 'ஹேவனில் பதிவு',
        'individual': 'தனிநபர்', 'organization': 'அமைப்பு', 'full_name': 'முழு பெயர்',
        'email_id': 'மின்னஞ்சல் முகவரி', 'phone_number': 'தொலைபேசி எண்', 'otp': 'OTP',
        'password': 'கடவுச்சொல்', 'confirm_password': 'கடவுச்சொல்லை உறுதிப்படுத்து', 'address': 'முகவரி',
        'identity_verification': 'அடையாள சரிபார்ப்பு', 'document_type': 'ஆவண வகை',
        'upload_document': 'ஆவணத்தைப் பதிவேற்று', 'register_button': 'பதிவு செய்',
        'passwords_not_match': 'கடவுச்சொற்கள் பொருந்தவில்லை!', 'org_name': 'அமைப்பின் பெயர்',
        'org_phone': 'அமைப்பின் தொலைபேசி', 'org_type': 'அமைப்பின் வகை',
        'org_description': 'அமைப்பின் விளக்கம்', 'contact_person': 'தொடர்பு நபர்',
        'contact_email': 'தொடர்பு மின்னஞ்சல்', 'org_verification': 'அமைப்பின் சரிபார்ப்பு',
        'cert_type': 'சான்றிதழ் வகை', 'upload_cert': 'சான்றிதழைப் பதிவேற்று',
        'not_registered': 'ஏற்கனவே கணக்கு உள்ளதா?'
    },
    'te': {
        'login': 'లాగిన్', 'register': 'నమోదు', 'register_title': 'HAVENలో నమోదు చేయండి',
        'individual': 'వ్యక్తిగత', 'organization': 'సంస్థ', 'full_name': 'పూర్తి పేరు',
        'email_id': 'ఇమెయిల్ చిరునామా', 'phone_number': 'ఫోన్ నంబర్', 'otp': 'ఓటిపి',
        'password': 'పాస్వర్డ్', 'confirm_password': 'పాస్వర్డ్‌ను నిర్ధారించండి', 'address': 'చిరునామా',
        'identity_verification': 'గుర్తింపు ధృవీకరణ', 'document_type': 'పత్రం రకం',
        'upload_document': 'పత్రాన్ని అప్‌లోడ్ చేయండి', 'register_button': 'నమోదు చేయండి',
        'passwords_not_match': 'పాస్‌వర్డ్‌లు సరిపోలడం లేదు!', 'org_name': 'సంస్థ పేరు',
        'org_phone': 'సంస్థ ఫోన్', 'org_type': 'సంస్థ రకం',
        'org_description': 'సంస్థ వివరణ', 'contact_person': 'సంప్రదింపు వ్యక్తి',
        'contact_email': 'సంప్రదింపు ఇమెయిల్', 'org_verification': 'సంస్థ ధృవీకరణ',
        'cert_type': 'సర్టిఫికేట్ రకం', 'upload_cert': 'సర్టిఫికేట్‌ను అప్‌లోడ్ చేయండి',
        'not_registered': 'ఇప్పటికే ఖాతా ఉందా?'
    }
}

SIMPLIFICATION_DICT = {
    'philanthropy': 'donating money to help people',
    'sustainability': 'using resources wisely to protect the environment for the future',
}

# --- Shared Functions ---
def get_translated_text(key, lang='en'):
    return TRANSLATION_DICT.get(lang, {}).get(key, key)

def simplify_text(text, lang='en'):
    for term, simple_term in SIMPLIFICATION_DICT.items():
        text = text.replace(term, f"**{term}** (*{simple_term}*)")
    return text

def load_custom_css():
    st.markdown("""
    <style>
    #MainMenu {visibility: hidden;}
    footer {visibility: hidden;}
    header {visibility: hidden;}
    .stDeployButton {display: none;}
    .main .block-container {
        padding-top: 1rem; padding-bottom: 1rem; max-width: 100%;
    }
    .login-container {
        background: linear-gradient(135deg, #e3f2fd 0%, #bbdefb 100%);
        min-height: 100vh; padding: 2rem;
    }
    .centered-card {
        max-width: 450px; margin: 5rem auto; padding: 2rem;
        background-color: white; border-radius: 15px;
        box-shadow: 0 8px 30px rgba(0, 0, 0, 0.1);
    }
    .register-card {
        max-width: 800px; margin: 2rem auto; padding: 2rem;
        background-color: white; border-radius: 15px;
        box-shadow: 0 8px 30px rgba(0, 0, 0, 0.1);
    }
    </style>
    """, unsafe_allow_html=True)

def render_logo():
    logo_path = "haven_logo.png"
    if os.path.exists(logo_path):
        with open(logo_path, "rb") as f:
            logo_data = base64.b64encode(f.read()).decode()
        st.markdown(f'<div style="text-align: center; margin-bottom: 2rem;"><img src="data:image/png;base64,{logo_data}" alt="HAVEN Logo" style="max-width: 200px;"></div>', unsafe_allow_html=True)
    else:
        st.markdown(f"<h1 style='text-align: center;'>HAVEN</h1>", unsafe_allow_html=True)

# --- API Call & Mock Data Functions ---
@st.cache_data(ttl=300)
def get_all_campaigns():
    # This mock data includes the 'verified' status from the workflow
    return [
        {"id": 1, "title": "Educate a Child in Rural India", "image": "https://placehold.co/600x300/E8D8B9/000000?text=Education", "current_amount": 7500, "target_amount": 10000, "donors_count": 120, "category": "Education", "verified": True, "description": "This campaign focuses on providing quality education and sustainability for underprivileged children."},
        {"id": 2, "title": "Clean Water for a Village", "image": "https://placehold.co/600x300/B9E8D8/000000?text=Water", "current_amount": 12000, "target_amount": 15000, "donors_count": 250, "category": "Health", "verified": True, "description": "Help us bring clean and safe drinking water to a village in need. This project is a key part of our philanthropy."},
        {"id": 3, "title": "New Art Project (Under Review)", "image": "https://placehold.co/600x300/D8B9E8/000000?text=Art", "current_amount": 500, "target_amount": 5000, "donors_count": 10, "category": "Community", "verified": False, "description": "A new community art project pending review."},
    ]

def submit_campaign_for_review(campaign_data):
    print("Campaign submitted for review:", campaign_data)
    return {"status": "success", "message": "Project submitted for AI and Admin review."}

@st.cache_data
def get_individual_profile_data():
    """Returns mock data for an individual user."""
    return {
        "full_name": "R. Prakash", "email": "individual@test.com", "phone": "09936528585",
        "address": "123 Main Street, Anytown, India", "donated_to": get_all_campaigns()[:1]
    }

@st.cache_data
def get_organization_profile_data():
    """Returns mock data for an organization user."""
    return {
        "org_name": "Green Future Foundation", "contact_person": "Anjali Sharma",
        "contact_email": "org@test.com", "org_phone": "011-12345678", "org_type": "NGO",
        "org_description": "Dedicated to environmental sustainability and conservation projects.",
        "created_campaigns": get_all_campaigns()[1:]
    }